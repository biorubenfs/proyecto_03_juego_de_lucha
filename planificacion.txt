Los luchadores será instancias de objetos, tendrán cosas comunes y luego alguna cosa diferencial, para que no sean iguales. Con lo cual emplearemos herencia.

Parce que hay que crear 4 luchadores (cuadrados de colores, e.g);

luchador:
    vida: no te compliques, ponlo a 100
    un algoritmo random para inflingir daño. math.random para incluir un factor de aleatoriedad que representaría un algoritmo.
    
    atributo de ataque (como atributo o como función, ya veré)
    Si ponemos hasta tres ataques, es un extra.

En teoría hay que usar: HMTL5, CSS3 y JS ES6.

addEventListener para reaccionar a la pulsaciones de teclado de los jugadores.

La alternancia de ataques se hará por un bucle while hasta que uno de los dos luchadores llegue a vida = 0 o algo así.


** Elegir el luchador y mostrar el cuadrado que corresponda

Podría intentar hacer un drag and drop en un hipótetico panel de seleccion

Poner dos botones en pantalla y que ataque quien le pulse (no obligatoriedad de alternancia de turnos, estrictamente hablando).

Almacenar los luchadores por ejemplo, en un array (en una estrcutura de datos),

¿Y si los personajes son frutas?

Mostrar el resultado, quien ha ganado. 

La vida podemos ponerlo con 100px o 100lo que sea e ir restandole dinámicanente


Echa un vistazo al pdf del DOM y BOM


al pulsar el boton atacar: (slide 32)

let clickAttack = document.addEventListener('click', attack)

function attack() {
    mostrar que fulano está atacando;
    restar la vida;
    actualizar la barra yl el indicador en pantalla
}

Podemos seleccionar el luchador con un checkbox unico o algo así, y nos traemos elemento al js.
Agregar un hover cuando pasamos por el personaje que lo agrande, y al hacer click que seleccione el personaje.


Crear todo el contenido html se oculta, y segun los vayamos necesitando, que se vaya mostrnad. Esto nos evitará usar mucho el dom y el BOM.

kata en slide 59, util; hacerla para practicarlo.


Al seleccionar personaje, ponerle borde, por ejemplo.


en vez de hover cuando estamos encima de un luchador, puedes haer un evento mouse in y mouse out.

slide 45 de jquery


definir distintas capas contenedoras (por ejemplo, inicio, seleccion de personaje, pantalla de lucha y pantalla de ganador).



Permitir añadir jugadores hasta que la longitud del array sea de dos elementos, y ahí parar.